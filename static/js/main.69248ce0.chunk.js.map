{"version":3,"sources":["components/Feedback/Statistics/Notification.js","components/Feedback/Statistics/Statistics.js","components/Feedback/Section.js","components/Feedback/FeedbackOptions/FeedbackOptions.js","components/Feedback/Feedback.js","components/App.js","index.js","components/Feedback/FeedbackOptions/FeedbackOptions.module.css"],"names":["Notification","message","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","FeedbackOptions","options","onLeaveFeedback","map","option","key","className","style","feedbackBtn","type","name","onClick","protoTypes","PropTypes","string","isRequired","func","MyClassComponent","state","props","handelbarInc","e","nameLower","target","toLowerCase","setState","countTotalFeedback","a","b","c","countPositiveFeedbackPercentage","percent","Math","round","this","Component","defaultProps","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"4RAIeA,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,2BAAIA,ICgC3BC,EA9BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OAAOJ,GAAQC,GAAWC,EACxB,oCACE,oCACQ,8BAAOF,IAEf,uCACW,8BAAOC,IAElB,mCACO,8BAAOC,IAEd,qCACS,8BAAOC,IAEhB,gDAEE,kCAAQC,KAIZ,kBAAC,EAAD,CAAcN,QAAQ,uBCVXO,EAZC,SAAC,GAAD,QAAGC,aAAH,MAAW,GAAX,EAAeC,EAAf,EAAeA,SAAf,OACd,iCACE,4BAAKD,GACJC,I,gCCaCC,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OACvB,4BACEC,IAAKD,EACLE,UAAWC,IAAMC,YACjBC,KAAK,SACLC,KAAMN,EACNO,QAAST,GAERE,OAKPJ,EAAgBY,WAAa,CAC3BX,QAASY,IAAUC,OAAOC,WAC1Bb,gBAAiBW,IAAUG,KAAKD,YAGnBf,QC/BMiB,E,4MAanBC,MAAQ,CACN1B,KAAM,EAAK2B,MAAM3B,KACjBC,QAAS,EAAK0B,MAAM1B,QACpBC,IAAK,EAAKyB,MAAMzB,K,EAGlB0B,aAAe,SAAAC,GAAM,IAIbC,EADFD,EADFE,OAAUb,KAEWc,cACvB,EAAKC,UAAS,SAAAP,GAAK,sBAChBI,EAAYJ,EAAMI,GAAa,O,EAIpCI,mBAAqB,SAACC,EAAGC,EAAGC,GAC1B,OAAOF,EAAIC,EAAIC,G,EAGjBC,gCAAkC,SAACH,EAAGC,EAAGC,GACvC,IACME,EAAWJ,GADHA,EAAIC,EAAIC,GACQ,IAE9B,OAAOG,KAAKC,MAAMF,GAAW,K,uDAGrB,IAAD,EACwBG,KAAKhB,MAA5B1B,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEvB,OACE,oCACE,kBAAC,EAAD,CAASI,MAAM,yBACb,kBAAC,EAAD,CACEG,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBgC,KAAKd,gBAI1B,kBAAC,EAAD,CAAStB,MAAM,cACb,yBAAKQ,UAAU,WACb,kBAAC,EAAD,CACEd,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOuC,KAAKR,mBAAmBlC,EAAMC,EAASC,GAC9CE,mBAAoBsC,KAAKJ,gCACvBtC,EACAC,EACAC,Y,GA9D8ByC,aAAzBlB,EACZmB,aAAe,CACpB5C,KAAM,EACNC,QAAS,EACTC,IAAK,GCRT,IAMe2C,EANH,kBACV,oCACE,kBAAC,EAAD,QCAJC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCJjDC,EAAOC,QAAU,CAAC,YAAc,wC","file":"static/js/main.69248ce0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Notification from './Notification';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return good || neutral || bad ? (\r\n    <>\r\n      <p>\r\n        Good: <span>{good}</span>\r\n      </p>\r\n      <p>\r\n        Neutral: <span>{neutral}</span>\r\n      </p>\r\n      <p>\r\n        Bad: <span>{bad}</span>\r\n      </p>\r\n      <p>\r\n        Total: <span>{total}</span>\r\n      </p>\r\n      <p>\r\n        Positive feedback:\r\n        <span> {positivePercentage}</span>\r\n      </p>\r\n    </>\r\n  ) : (\r\n    <Notification message=\"No feedback given\" />\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title = '', children }) => (\r\n  <section>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//-------------------------------------------------\r\nimport style from './FeedbackOptions.module.css';\r\n\r\n// const FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n//   console.log(onLeaveFeedback);\r\n//   return (\r\n//     <button\r\n//       className={style.feedbackBtn}\r\n//       type=\"button\"\r\n//       onClick={onLeaveFeedback}\r\n//       name={options}\r\n//     >\r\n//       {options}\r\n//     </button>\r\n//   );\r\n// };\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return options.map(option => (\r\n    <button\r\n      key={option}\r\n      className={style.feedbackBtn}\r\n      type=\"button\"\r\n      name={option}\r\n      onClick={onLeaveFeedback}\r\n    >\r\n      {option}\r\n    </button>\r\n  ));\r\n};\r\n\r\nFeedbackOptions.protoTypes = {\r\n  options: PropTypes.string.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//--------------------------------------------------------------\r\nimport Statistics from './Statistics/Statistics';\r\nimport Section from './Section';\r\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\r\n\r\nexport default class MyClassComponent extends Component {\r\n  static defaultProps = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  static propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n  };\r\n\r\n  state = {\r\n    good: this.props.good,\r\n    neutral: this.props.neutral,\r\n    bad: this.props.bad,\r\n  };\r\n\r\n  handelbarInc = e => {\r\n    const {\r\n      target: { name },\r\n    } = e;\r\n    const nameLower = name.toLowerCase();\r\n    this.setState(state => ({\r\n      [nameLower]: state[nameLower] + 1,\r\n    }));\r\n  };\r\n\r\n  countTotalFeedback = (a, b, c) => {\r\n    return a + b + c;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = (a, b, c) => {\r\n    const total = a + b + c;\r\n    const percent = (a / total) * 100;\r\n\r\n    return Math.round(percent) + '%';\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={['Good', 'Neutral', 'Bad']}\r\n            onLeaveFeedback={this.handelbarInc}\r\n          />\r\n        </Section>\r\n\r\n        <Section title=\"Statistics\">\r\n          <div className=\"textArr\">\r\n            <Statistics\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={this.countTotalFeedback(good, neutral, bad)}\r\n              positivePercentage={this.countPositiveFeedbackPercentage(\r\n                good,\r\n                neutral,\r\n                bad,\r\n              )}\r\n            />\r\n          </div>\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Feedback from './Feedback/Feedback';\r\n\r\nconst App = () => (\r\n  <>\r\n    <Feedback />\r\n  </>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackBtn\":\"FeedbackOptions_feedbackBtn__1hnjw\"};"],"sourceRoot":""}